.. _ch:problem_file:

*************
Problem File
*************


Numerical setup
=================
The following parameters must be defined in the ``.f03`` file. For a normal user, you should specify the coordinate system ``coordType``, boundary condition ``boundaryType``, and equation of state ``eosType``. The Riemann solver ``solverType`` and slope limiter ``limiterType`` can be left as default.

Coordinate System
----------------

.. _table:Coordinate System:
.. table:: Coordinate System:
   
   +---------------------------+-----------+
   | **coordType**             | **Values**|
   +===========================+===========+
   | ``Cartesian``             | 1         |                               
   +---------------------------+-----------+
   | ``Cylindrical log r``     | 2         |                              
   +---------------------------+-----------+
   | ``Cylindrical uniform r`` | 3         |                              
   +---------------------------+-----------+


Boundary Condition
----------------

.. _table:Boundary Condition:
.. table:: Boundary Condition:
   
   +---------------------------+-----------+
   | **boundaryType**          | **Values**|
   +---------------------------+-----------+
   | ``user defined``          | 0         | 
   +---------------------------+-----------+
   | ``zero gradient``         | 1         |                               
   +---------------------------+-----------+
   | ``reflective``            | 2         |                              
   +---------------------------+-----------+
   | ``periodic``              | 3         |                              
   +---------------------------+-----------+

   
Equation of State
----------------

.. _table:Equation of State:
.. table:: Equation of State:
   
   +---------------------------+-----------+
   | **eosType**               | **Values**|
   +===========================+===========+
   | ``isothermal``            | 1         |                               
   +---------------------------+-----------+
   | ``adiabatic``             | 2         |                              
   +---------------------------+-----------+

.. note::
   Not all EOS and solvers are supported.

Riemann Solver
----------------

.. _table:Riemann Solver:
.. table:: Riemann Solver:
   
   +---------------------------+-----------+
   | **solverType**            | **Values**|
   +===========================+===========+
   | ``exactHD``               | 1         |                               
   +---------------------------+-----------+
   | ``HLL`` for HD            | 2         |                              
   +---------------------------+-----------+
   | ``HLLC``                  | 3         |                              
   +---------------------------+-----------+
   | ``HLL`` for MHD           | 4         |                              
   +---------------------------+-----------+
   | ``HLLD``                  | 5         |                              
   +---------------------------+-----------+


Slope Limiter
----------------

.. _table:Slope Limiter:
.. table:: Slope Limiter:
   
   +---------------------------+-----------+
   | **limiterType**           | **Values**|
   +===========================+===========+
   | ``zero``                  | 0         |                               
   +---------------------------+-----------+
   | ``van Leer``              | 1         |                              
   +---------------------------+-----------+
   | ``fslop``                 | 2         |                              
   +---------------------------+-----------+  
   | ``minmod``                | 3         |                              
   +---------------------------+-----------+
   
Problem setup
==============

Basic parameters
----------------
For a normal user, you should specify the number of dimensions ``ndim``, number of meshes ``nMesh(1)/(2)/(3)``, boundary positions ``leftBdry(1)/(2)/(3)``, ``rightBdry(1)/(2)/(3)``, endtime of simulation ``time_end``, and soundspeed/adiabatic index ``gam`` or ``adiGamma``. The other parameters can be left as default.


.. _table:Problem setup:
.. table:: Problem setup:
   
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | **Variables**               | **Values**           | **notes**                                                   |
   +=============================+======================+=============================================================+
   | ``gridID``                  | integer              | Problem ID                                                  |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``ndim``                    | 1 / 2 / 3            | Number of dimensions                                        |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``nbuf``                    | 2 (default)          | Number of buffer zones                                      |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``variable``                | 0 (default)          | Variables in :numref:`table:variables`, set 1 to initialize |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``nMesh(1)/(2)/(3)``        | integer              | Number of meshes in each dimension                          |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``leftBdry(1)/(2)/(3)``     | double precision     | Boundary position in each dimension                         |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``rightBdry(1)/(2)/(3)``    | double precision     | Boundary position in each dimension                         |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``gam`` or ``adiGamma``     | 5.d0/3.d0 (default)  | Useless if isothermal                                       |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``sndspd``                  | double precision     | Soundspeed [km/s]                                           |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``CFL``                     | 0 < CFL < 1          | CFL condition (default 0.4)                                 |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``nstep``                   | integer              | Number of time steps                                        |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``t``                       | double precision     | Current time in [code unit]                                 |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``dt``                      | double precision     | Time step in [code unit]                                    |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``time_end``                | double precision     | Simulation end time in [code unit]                          |
   +-----------------------------+----------------------+-------------------------------------------------------------+


File output
=================

.. _table:File output:
.. table:: File output:

   +-----------------------------+----------------------+-------------------------------------------------------------+
   | **Variables**               | **Values**           | **notes**                                                   |
   +=============================+======================+=============================================================+
   | ``file_start``              | 0                    | start file number                                           |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``dt_out``                  | double precision     | output interval in code unit                                |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``toutput``                 | double precision     | output time in code unit                                    |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``fnum``                    | integer              | outputfile number                                           |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``write_vtk``               | .true./.false.       | vtk format output                                           |
   +-----------------------------+----------------------+-------------------------------------------------------------+


MPI setup
=================

.. note::
   If the periodic boundary condition ``boundaryType = 3`` is used, the MPI periodic boundary condition ``periods(1)/(2)/(3)`` must be ``.true.``. The remaining parameters can be left as default.

.. _table:MPI setup:
.. table:: MPI setup:

   +-----------------------------+----------------------+-------------------------------------------------------------+
   | **Variables**               | **Values**           | **notes**                                                   |
   +=============================+======================+=============================================================+
   | ``periods(1)/(2)/(3)``      | .true./.false.       | MPI periodic boundary conditions                            |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``dims(1)/(2)/(3)``         | integer              | Number of processes (CPU cores) in each dimension           |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``reorder``                 | .true./.false.       | MPI reorder flag                                            |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``myid``                    | integer              | MPI rank                                                    |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``nprocs``                  | integer              | Total number of MPI processes                               |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``MPI_COMM_WORLD``          | integer              | MPI communicator                                            |
   +-----------------------------+----------------------+-------------------------------------------------------------+
   | ``ierr``                    | integer              | MPI error code                                              |
   +-----------------------------+----------------------+-------------------------------------------------------------+


Physics Modules   
=================

Turbulence Driving
------------------

.. _table:TurbulenceDriving:
.. table:: TurbulenceDriving:

   +---------------------------+------------------+------------------------------------+
   | **Variables**             | **Values**       | **notes**                          |
   +===========================+==================+====================================+
   | ``DriveTurbulence``       | .true./.false.   | Drive turbulence or not            |
   +---------------------------+------------------+------------------------------------+
   | ``DT_mode``               | 0                | Drive at begining                  |            
   +---------------------------+------------------+------------------------------------+
   |                           | 1                | Drive periodically                 |             
   +---------------------------+------------------+------------------------------------+
   | ``dt_turb``               | double precision | Energy injection time interval     |        
   +---------------------------+------------------+------------------------------------+
   | ``t_count_turb``          | double precision | Energy injection count time        |
   +---------------------------+------------------+------------------------------------+
   | ``t_accum_turb``          | double precision | Energy injection accumulation time |                                 
   +---------------------------+------------------+------------------------------------+
   | ``zeta``                  | 0<=zeta<=1       | Soledoidal or compressive driving  |       
   +---------------------------+------------------+------------------------------------+
   | ``DT_scale``              | double precision | Driving scale                      |           
   +---------------------------+------------------+------------------------------------+
   | ``n_turb``                | integer          | Number of driving                  |       
   +---------------------------+------------------+------------------------------------+
   | ``drivingWN_DT``          | double precision | Driving wavenumber                 |
   +---------------------------+------------------+------------------------------------+
   | ``Energy_DT``             | double precision | Energy injected in each driving    |
   +---------------------------+------------------+------------------------------------+
   | ``netmomx_DT``            | double precision | Net momentum in x direction        |
   +---------------------------+------------------+------------------------------------+
   | ``netmomy_DT``            | double precision | Net momentum in y direction        |
   +---------------------------+------------------+------------------------------------+
   | ``netmomz_DT``            | double precision | Net momentum in z direction        |
   +---------------------------+------------------+------------------------------------+

.. note::
   Only periodic boundary condition is suuported for turbulence driving, the MPI periodic boundary condition ``periods(1)/(2)/(3)`` must be ``.true.``.


Self-gravity
------------------

.. _table:SelfGravity:
.. table:: SelfGravity:

   +---------------------------+------------------------------------+------------------------------------+
   | **Variables**             | **Values**                         | **notes**                          |
   +===========================+====================================+====================================+
   | ``SelfGravity``           | .true./.false.                     | Self-gravity or not                |
   +---------------------------+------------------------------------+------------------------------------+
   | ``sgBdryType``            | 0                                  | isolated                           |            
   +---------------------------+------------------------------------+------------------------------------+
   |                           | 1                                  | periodic                           |             
   +---------------------------+------------------------------------+------------------------------------+
   | ``sgfx`` ``sgfy`` ``sgfz``| :math:`g=-\nabla \phi`             | gravitational acceleration         |             
   +---------------------------+------------------------------------+------------------------------------+
   |                           | :math:`\rho v \cdot \boldsymbol{g}`| gravitational energy               |             
   +---------------------------+------------------------------------+------------------------------------+


.. note::
   If the periodic boundary condition for self-gravity ``sgBdryType = 1`` is used, the MPI periodic boundary condition ``periods(1)/(2)/(3)`` must be ``.true.``.

Ambipolar Diffusion
------------------

.. _table:Ambipolar Diffusion:
.. table:: Ambipolar Diffusion:

   +---------------------------+------------------------------------+------------------------------------+
   | **Variables**             | **Values**                         | **notes**                          |
   +===========================+====================================+====================================+
   | ``enable_ad``             | .true./.false.                     |                                    |
   +---------------------------+------------------------------------+------------------------------------+
   | ``mu_ad``                 | double precision                   | molecular mass in [amu]            |
   +---------------------------+------------------------------------+------------------------------------+
   | ``alpha_ad``              | double precision                   | coupling coefficient in [code unit]|
   +---------------------------+------------------------------------+------------------------------------+


